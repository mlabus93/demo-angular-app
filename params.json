{
  "name": "Demo Angular App",
  "tagline": "Demo app with best practices for angular 1.x",
  "body": "# VTS GUI Coding Guidelines\r\n\r\n## Summary\r\n\r\nThis will provide the basis for organization, structure and best practices for an AngularJS 1.x application. This guide borrows heavily from John Papa's (@johnpapa) guide, which can be viewed here: https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md\r\n\r\n## Table of Contents\r\n\r\n1. [Naming Conventions](#naming-conventions)\r\n1. [Project Organization](#project-organization)\r\n1. [Modules](#modules)\r\n1. [Controllers](#controllers)\r\n1. [Services](#services)\r\n1. [Directives](#directives)\r\n1. [Tests](#tests)\r\n\r\n## Naming Conventions\r\nAll naming should describe the specific component or file being used.\r\n\r\n### Components\r\n - Controllers and Services should be named in Pascal case and suffixed with their respective component type.\r\n\r\n > ExampleCtrl, SomeTestSvc\r\n\r\n - Module names should be camel cased.  \r\n `angular.module('someTestApp', []);`\r\n\r\n - Submodules should be prefixed with their parent module using dot syntax.  \r\n `angular.module('app', ['app.routes']);`\r\n\r\n - Directives should be prefixed to avoid collisions with future html or angular specs.  \r\n `.directive('vtcCarousel', vtcCarousel) <vtc-carousel> </vtc-carousel>`\r\n\r\n### Files\r\n - All files should be lowercase and hyphenated for each cased word.\r\n - For Angular files, suffix the file with the type of component it is.\r\n\r\n > 'ExampleCtrl' should be named example.ctrl.js  \r\n   'SomeTestSvc' should be named some-test.svc.js  \r\n   'app' module should be named app.module.js\r\n\r\n - Submodules should leave out the prefix during file naming.\r\n\r\n > 'app.routes' should be named routes.module.js\r\n\r\n - Config blocks should be named based off of their module name.\r\n \r\n > 'exampleModule' should have a config file named example-module.config.js\r\n\r\n## Project Organization\r\n\r\n - There should be a working directory for app development and a directory specific for dist.\r\n\r\n - Inside of the working directory, there should be a folder for features of the project. This folder contains subfolders for all the features and each feature should have it's own module.\r\n\r\n - All of the components (controllers, services, config, etc.) and markup (html) of the module should be kept in the specific feature's directory.\r\n\r\n - Each component should exist in it's own file independent of other components. The only exceptions would be including run blocks after a config or providers with config.\r\n\r\n - Each angular component file should be wrapped in an IIFE (Immediately Invoked Function Expression) to avoid pollution to the global scope. Additionally, use strict mode inside of each angular component file.\r\n\r\n ```javascript\r\n    (function() {\r\n      'use strict';\r\n    })();\r\n ```\r\n\r\n## Modules\r\n\r\n - Modules should be defined with setter syntax.\r\n\r\n `angular.module('app', []);`\r\n\r\n - Modules should be retrieved with getter syntax.\r\n\r\n ```javascript\r\n    angular\r\n      .module('app')\r\n      .controller('AttachedToAppCtrl', AttachedToAppCtrl);\r\n ```\r\n\r\n - Pass in named functions to components so they are easier to read and debug (as shown above).\r\n\r\n## Controllers\r\nThis is the controllers section.\r\n\r\n## Services\r\nThis is the services section.\r\n\r\n## Directives\r\nThis is the directives section.\r\n\r\n## Tests\r\nThis is the tests section.\r\n\r\n### Authors and Contributors\r\nMike Labus (@mlabus93)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}